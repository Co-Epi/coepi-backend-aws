buildscript {
    ext.kotlin_version = '1.3.71'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:5.2.0"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
}

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

group 'org.coepi'
version '1.0.0'

repositories {
    mavenCentral()
    maven {
        url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release'
    }
}

configurations {
    dynamodb
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    implementation "org.apache.commons:commons-lang3:3.10"
    implementation "com.amazonaws:aws-java-sdk-dynamodb:1.11.755"
    implementation "com.amazonaws:aws-java-sdk-s3:1.11.755"
    implementation "com.amazonaws:aws-lambda-java-core:1.2.0"
    implementation "com.amazonaws:aws-lambda-java-events:2.2.7"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    implementation "commons-io:commons-io:2.6"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.10.3"
    implementation "com.fasterxml.jackson.core:jackson-core:2.10.3"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.10.3"

    testImplementation(
            'org.assertj:assertj-core:3.12.2',
            'org.junit.jupiter:junit-jupiter-api:5.4.2',
            'com.amazonaws:DynamoDBLocal:1.11.477'
    )
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.4.2')
    dynamodb fileTree (dir: 'lib', include: ["*.dylib", "*.so", "*.dll"])
    dynamodb 'com.amazonaws:DynamoDBLocal:1.11.477'

    task copyNativeDeps(type: Copy) {
        from configurations.dynamodb
        into "$project.buildDir/libs/"
    }

    test.dependsOn copyNativeDeps
    test.doFirst {
        systemProperty "java.library.path", "./build/libs"
    }
}

// TODO: Use a gradle plugin to generate models, example (https://github.com/Yelp/swagger-gradle-codegen).
// Right now, need to use swagger CLI
// swagger-codegen generate --lang kotlin-server --input-spec api_definition/coepi_api_0.3.0.yml --model-package org.coepi.api.models -Dmodels
